(LeanPy.Grammar.block
 [(LeanPy.Grammar.stmt
   (LeanPy.Grammar.simpleStmts
    [(LeanPy.Grammar.assignment
      (group
       [(group (LeanPy.Grammar.starTargets [(LeanPy.Grammar.pyStarTarget__1 (LeanPy.Grammar.name `x))]) "=")]
       (LeanPy.Grammar.annotatedRhs
        (LeanPy.Grammar.starExprs
         [(LeanPy.Grammar.starExpr
           (LeanPy.Grammar.callExpr
            (LeanPy.Grammar.identExpr `f)
            "("
            [(LeanPy.Grammar.arguments
              (LeanPy.Grammar.args (group [(group (group (LeanPy.Grammar.numExpr (num "1"))))] [])))]
            ")"))]))
       []))
     ";"
     (LeanPy.Grammar.starExprs
      [(LeanPy.Grammar.starExpr
        (LeanPy.Grammar.add
         (LeanPy.Grammar.numExpr (num "4"))
         "+"
         (LeanPy.Grammar.callExpr
          (LeanPy.Grammar.identExpr `f)
          "("
          [(LeanPy.Grammar.arguments
            (LeanPy.Grammar.args (group [(group (group (LeanPy.Grammar.numExpr (num "3"))))] [])))]
          ")")))])]))
  (LeanPy.Grammar.stmt
   (LeanPy.Grammar.ifStmt
    "if"
    (LeanPy.Grammar.namedExpr
     (group (LeanPy.Grammar.is (LeanPy.Grammar.identExpr `a) "is" (LeanPy.Grammar.noneExpr "None"))))
    ":"
    (LeanPy.Grammar.block
     [(LeanPy.Grammar.stmt
       (LeanPy.Grammar.simpleStmts
        [(LeanPy.Grammar.starExprs
          [(LeanPy.Grammar.starExpr
            (LeanPy.Grammar.callExpr
             (LeanPy.Grammar.identExpr `kill)
             "("
             [(LeanPy.Grammar.arguments
               (LeanPy.Grammar.args (group [(group (group (LeanPy.Grammar.identExpr `pid)))] [])))]
             ")"))])]))
      (LeanPy.Grammar.stmt
       (LeanPy.Grammar.simpleStmts
        [(LeanPy.Grammar.returnStmt "return" [(LeanPy.Grammar.starExpr (LeanPy.Grammar.trueExpr "True"))])]))])
    []
    [(LeanPy.Grammar.elseBlock
      "else"
      ":"
      (LeanPy.Grammar.block
       [(LeanPy.Grammar.stmt
         (LeanPy.Grammar.simpleStmts
          [(LeanPy.Grammar.returnStmt
            "return"
            [(LeanPy.Grammar.starExpr (LeanPy.Grammar.falseExpr "False"))])]))]))]))])
